[tool.poetry]
name = "teia-conhecimento"
version = "0.1.0"
description = ""
authors = ["Gustavo Mescoki Sarti <gmsarti@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = {extras = ["all"], version = "^0.111.0"}
fastapi-socketio = "^0.0.10"
editorconfig = "^0.12.4"
sqlalchemy = "^2.0.30"
psycopg2-binary = "^2.9.9"
python-dotenv = "^1.0.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.4"
pytest = "^8.2.0"
pytest-cov = "^5.0.0"
black = "^24.4.2"
taskipy = "^1.12.2"
poetry-plugin-export = "^1.8.0"

[tool.poetry.group.doc.dependencies]
mkdocs-material = "^9.5.23"
mkdocstrings = "^0.25.1"
mkdocstrings-python = "^1.10.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
extend-exclude = ['migrations']

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'

[tool.taskipy.tasks]
lint = 'ruff check . && ruff check . --diff'
format = 'ruff check . --fix && ruff format .'
run = 'fastapi dev fast_zero/app.py'
pre_test = 'task lint'
test = 'pytest -s -x --cov=fast_zero -vv'
post_test = 'coverage html'
uvicorn_up = 'uvicorn app.controllers.api.v1.root:app --reload'
postgres_up = 'docker compose -f app/infra/compose.yaml up -d'
postgres_stop = 'docker compose -f app/infra/compose.yaml stop'
postgres_down = 'docker compose -f app/infra/compose.yaml down'
dev = 'task postgres_up && task uvicorn_up'